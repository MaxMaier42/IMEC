res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
}
res
T1
T2
T3
P
res
1:T1
(T1+1):(T1+T2)
(T1+T2+1):(T1+T2+P)
i = 1
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
res
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
res
res <- data.frame(matrix(nrow = iter, ncol = T1 + T2 + P))
res
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$ExplanatoryCoherenceT2[[1]], results[[1]]$phenomena)
colnames(res) <- names
res
i = 1
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
head(res)
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
}
head(res)
hist(res$E1)
res$E1
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
res
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
res
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$ExplanatoryCoherenceT2[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
res
matrix <- IMEC$Explanations
phenomena <- IMEC$phenomena
evidence <- IMEC$Evidence
theory1 <- IMEC$ExplanatoryCoherenceT1[[1]]
if (length(IMEC) > 4) {
theory2 <- IMEC$ExplanatoryCoherenceT2[[1]]
} else {
theory2 <- character()
}
propositions  <- c(theory1, theory2)
results <- list(length = iter)
for(i in 1:iter){
matrixboot <- matrix
for(j in 1:nrow(matrix)){
for(k in 1:ncol(matrix))
if(rbinom(1, 1, 0.5) == 1)
matrixboot[j, k] <- matrix[j,k]*runif(1, 1, range)
else{
matrixboot[j, k] <- matrix[j,k]/runif(1, 1, range)
}
}
matrixboot[upper.tri(matrixboot)] <- t(matrixboot)[upper.tri(matrixboot)]
results[[i]] <- computeIMEC(matrixboot, evidence, phenomena, theory1, theory2, analytic)
}
T1 <- length(theory1)
T2 <- length(theory2)
P  <- length(phenomena)
res <- data.frame(matrix(nrow = iter, ncol = T1 + T2 + P))
head(res)
if(length(T2 == 0)){
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
} else {
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$ExplanatoryCoherenceT2[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
}
res
T1 <- length(theory1)
T2 <- length(theory2)
P  <- length(phenomena)
res <- data.frame(matrix(nrow = iter, ncol = T1 + T2 + P))
if(length(T2) == 0){
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
} else {
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$ExplanatoryCoherenceT2[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
}
res
##We recommend to read the tutorial at https://osf.io/6dgyv/ before running this code.
edgeBooststrap <- function(IMEC, iter = 500, range = 10, analytic = T, plot = T){
IMEC <- IMEC
matrix <- IMEC$Explanations
phenomena <- IMEC$phenomena
evidence <- IMEC$Evidence
theory1 <- IMEC$ExplanatoryCoherenceT1[[1]]
if (length(IMEC) > 4) {
theory2 <- IMEC$ExplanatoryCoherenceT2[[1]]
} else {
theory2 <- character()
}
propositions  <- c(theory1, theory2)
results <- list(length = iter)
for(i in 1:iter){
matrixboot <- matrix
for(j in 1:nrow(matrix)){
for(k in 1:ncol(matrix))
if(rbinom(1, 1, 0.5) == 1)
matrixboot[j, k] <- matrix[j,k]*runif(1, 1, range)
else{
matrixboot[j, k] <- matrix[j,k]/runif(1, 1, range)
}
}
matrixboot[upper.tri(matrixboot)] <- t(matrixboot)[upper.tri(matrixboot)]
results[[i]] <- computeIMEC(matrixboot, evidence, phenomena, theory1, theory2, analytic)
}
T1 <- length(theory1)
T2 <- length(theory2)
P  <- length(phenomena)
res <- data.frame(matrix(nrow = iter, ncol = T1 + T2 + P))
if(length(T2) == 0){
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
} else {
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$ExplanatoryCoherenceT2[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
}
if(plot){
if(length(theory1) > 1){
hist(res$Theory1, main = paste0("Sensitivity Bootstrap for Theory 1 with Scaling Range ", range), xlab = "Coherence of Theory 1", xlim = c(0,1))
par(ask=T)
}
if(length(theory2) > 1){
hist(res$Theory2, main = paste0("Sensitivity Bootstrap for Theory 2 with Scaling Range ", range), xlab = "Coherence of Theory 2", xlim = c(0,1))
}
for(i in 1:length(names)){
hist(res[,i], main = paste0("Sensitivity Bootstrap for ", names[i], " with Scaling Range ", range), xlab = paste0("Coherence of ", names[i]), xlim = c(0,1))
par(ask=T)
}
}
return(res)
}
library(IMEC)
## explanatory breadth ##
T1 <- c("H1")
T2 <- c("H2")
Phenomena <- c("E1", "E2")
Thresholds <- c(2,2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- explain("H1", "E1", explanations)
explanations <- explain("H1", "E2", explanations)
explanations <- explain("H2", "E2", explanations)
explanations <- contradict("H1", "H2", explanations)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
summary(Coherence)
breadth <- plot(Coherence, nodesize = 12)
## Refutation ##
#one theory
T1 <- c("H1")
Phenomena <- c("E1", "E2", "E3")
Thresholds <- c(2,2,-2)
explanations <- initializeNetwork(Phenomena, T1)
explanations <- explain(c("H1"),"E1",explanations,weight = 1.0001)
explanations <- explain(c("H1"),"E2",explanations)
explanations <- explain(c("H1"),"E3", explanations)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1)
summary(Coherence)
Refutation1 <- plot(Coherence, nodesize = 12)
#two theories
T1 <- c("H1")
T2 <- c("H2")
Phenomena <- c("E1", "E2", "E3")
Thresholds <- c(2,2,-2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- explain(c("H1"),"E1",explanations)
explanations <- explain(c("H1"),"E2",explanations)
explanations <- explain(c("H2"),"E1",explanations)
explanations <- explain(c("H2"),"E2",explanations)
explanations <- explain(c("H1"),"E3", explanations)
explanations <- contradict("H1", "H2", explanations)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
summary(Coherence)
Refutation2 <- plot(Coherence, nodesize = 12)
m <- matrix(c(1,2), byrow = T, nrow =  1)
layout(m)
layout.show(length(m))
par(oma=c(2, 2, 2, 2), mar=c(0, 0, 0, 0))
plot(Refutation1, nodesize = 20)
box()
plot(Refutation2, nodesize = 20)
text(x = 0.9,adj = c(1,0),labels = "B", cex = 2)
box()
## Simplicity ##
T1 <- c("H1")
T2 <- c("H2", "H3")
Phenomena <- c("E1")
Thresholds <- c(2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- explain(c("H1"), "E1", explanations)
explanations <- explain(c("H2", "H3"), "E1", explanations)
explanations <- contradict("H1", "H2", explanations)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
summary(Coherence, nodesize = 12)
edgeBooststrap(Coherence)
edgeBooststrap(Coherence)
IMEC <- IMEC
matrix <- IMEC$Explanations
phenomena <- IMEC$phenomena
evidence <- IMEC$Evidence
theory1 <- IMEC$ExplanatoryCoherenceT1[[1]]
if (length(IMEC) > 4) {
theory2 <- IMEC$ExplanatoryCoherenceT2[[1]]
} else {
theory2 <- character()
}
propositions  <- c(theory1, theory2)
results <- list(length = iter)
for(i in 1:iter){
matrixboot <- matrix
for(j in 1:nrow(matrix)){
for(k in 1:ncol(matrix))
if(rbinom(1, 1, 0.5) == 1)
matrixboot[j, k] <- matrix[j,k]*runif(1, 1, range)
else{
matrixboot[j, k] <- matrix[j,k]/runif(1, 1, range)
}
}
matrixboot[upper.tri(matrixboot)] <- t(matrixboot)[upper.tri(matrixboot)]
results[[i]] <- computeIMEC(matrixboot, evidence, phenomena, theory1, theory2, analytic)
}
T1 <- length(theory1)
T2 <- length(theory2)
P  <- length(phenomena)
res <- data.frame(matrix(nrow = iter, ncol = T1 + T2 + P))
if(length(T2) == 0){
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
} else {
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$ExplanatoryCoherenceT2[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
}
if(plot){
if(length(theory1) > 1){
hist(res$Theory1, main = paste0("Sensitivity Bootstrap for Theory 1 with Scaling Range ", range), xlab = "Coherence of Theory 1", xlim = c(0,1))
par(ask=T)
}
if(length(theory2) > 1){
hist(res$Theory2, main = paste0("Sensitivity Bootstrap for Theory 2 with Scaling Range ", range), xlab = "Coherence of Theory 2", xlim = c(0,1))
}
for(i in 1:length(names)){
hist(res[,i], main = paste0("Sensitivity Bootstrap for ", names[i], " with Scaling Range ", range), xlab = paste0("Coherence of ", names[i]), xlim = c(0,1))
par(ask=T)
}
}
T1 <- c("H1")
T2 <- c("H2", "H3")
Phenomena <- c("E1")
Thresholds <- c(2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- explain(c("H1"), "E1", explanations)
explanations <- explain(c("H2", "H3"), "E1", explanations)
explanations <- contradict("H1", "H2", explanations)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
summary(Coherence, nodesize = 12)
edgeBooststrap(Coherence)
edgeBooststrap(Coherence)
Simplicity <- plot(Coherence, nodesize = 12)
2
Thresholds
## Deactivating Evidence ##
library(IMEC)
T1 <- c("H1")
T2 <- c("H2")
Phenomena <- c("E1", "E2", "E3", "E4")
Thresholds <- c(2,2,2,2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- explain("H1", "E1", explanations)
explanations <- explain("H2", "E2", explanations)
explanations <- explain("H2", "E3", explanations)
explanations <- explain("H2", "E4", explanations)
explanations <- contradict("H1", "H2", explanations)
coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
edgeBootstrap(coherence)
##We recommend to read the tutorial at https://osf.io/6dgyv/ before running this code.
edgeBootstrap <- function(IMEC, iter = 500, range = 10, analytic = T, plot = T){
IMEC <- IMEC
matrix <- IMEC$Explanations
phenomena <- IMEC$phenomena
evidence <- IMEC$Evidence
theory1 <- IMEC$ExplanatoryCoherenceT1[[1]]
if (length(IMEC) > 4) {
theory2 <- IMEC$ExplanatoryCoherenceT2[[1]]
} else {
theory2 <- character()
}
propositions  <- c(theory1, theory2)
results <- list(length = iter)
for(i in 1:iter){
matrixboot <- matrix
for(j in 1:nrow(matrix)){
for(k in 1:ncol(matrix))
if(rbinom(1, 1, 0.5) == 1)
matrixboot[j, k] <- matrix[j,k]*runif(1, 1, range)
else{
matrixboot[j, k] <- matrix[j,k]/runif(1, 1, range)
}
}
matrixboot[upper.tri(matrixboot)] <- t(matrixboot)[upper.tri(matrixboot)]
results[[i]] <- computeIMEC(matrixboot, evidence, phenomena, theory1, theory2, analytic)
}
T1 <- length(theory1)
T2 <- length(theory2)
P  <- length(phenomena)
res <- data.frame(matrix(nrow = iter, ncol = T1 + T2 + P))
if(length(T2) == 0){
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
} else {
names <- c(results[[1]]$ExplanatoryCoherenceT1[[1]], results[[1]]$ExplanatoryCoherenceT2[[1]], results[[1]]$phenomena)
colnames(res) <- names
for(i in 1:500){
res[i, 1:T1] <- results[[i]]$ExplanatoryCoherenceT1[[2]]
res[i, (T1+1):(T1+T2)] <- results[[i]]$ExplanatoryCoherenceT2[[2]]
res[i, (T1+T2+1):(T1+T2+P)] <- results[[i]]$CredibilityOfphenomena
}
if(length(theory1) > 1){
res$Theory1 <- rowMeans(res[, 1:T1])
}
if(length(theory2) > 1){
res$Theory2 <- rowMeans(res[, (T1+1):(T1+T2)])
}
}
if(plot){
if(length(theory1) > 1){
hist(res$Theory1, main = paste0("Sensitivity Bootstrap for Theory 1 with Scaling Range ", range), xlab = "Coherence of Theory 1", xlim = c(0,1))
par(ask=T)
}
if(length(theory2) > 1){
hist(res$Theory2, main = paste0("Sensitivity Bootstrap for Theory 2 with Scaling Range ", range), xlab = "Coherence of Theory 2", xlim = c(0,1))
}
for(i in 1:length(names)){
hist(res[,i], main = paste0("Sensitivity Bootstrap for ", names[i], " with Scaling Range ", range), xlab = paste0("Coherence of ", names[i]), xlim = c(0,1))
par(ask=T)
}
}
return(res)
}
## Deactivating Evidence ##
library(IMEC)
T1 <- c("H1")
T2 <- c("H2")
Phenomena <- c("E1", "E2", "E3", "E4")
Thresholds <- c(2,2,2,2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- explain("H1", "E1", explanations)
explanations <- explain("H2", "E2", explanations)
explanations <- explain("H2", "E3", explanations)
explanations <- explain("H2", "E4", explanations)
explanations <- contradict("H1", "H2", explanations)
coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
edgeBootstrap(coherence)
## Simplicity ##
T1 <- c("H1")
T2 <- c("H2", "H3")
Phenomena <- c("E1")
Thresholds <- c(2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- explain(c("H1"), "E1", explanations)
explanations <- explain(c("H2", "H3"), "E1", explanations)
explanations <- contradict("H1", "H2", explanations)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
summary(Coherence, nodesize = 12)
Coherence
mean(Coherence$ExplanatoryCoherenceT1[[2]])
mean(Coherence$ExplanatoryCoherenceT2[[2]])
edgeBootstrap(Coherence)
Simplicity <- plot(Coherence, nodesize = 12)
IMEC <- Coherence
matrix <- IMEC$Explanations
phenomena <- IMEC$phenomena
evidence <- IMEC$Evidence
theory1 <- IMEC$ExplanatoryCoherenceT1[[1]]
if (length(IMEC) > 4) {
theory2 <- IMEC$ExplanatoryCoherenceT2[[1]]
} else {
theory2 <- character()
}
propositions  <- c(theory1, theory2)
results <- list(length = iter)
for(i in 1:iter){
matrixboot <- matrix
for(j in 1:nrow(matrix)){
for(k in 1:ncol(matrix))
if(rbinom(1, 1, 0.5) == 1)
matrixboot[j, k] <- matrix[j,k]*runif(1, 1, range)
else{
matrixboot[j, k] <- matrix[j,k]/runif(1, 1, range)
}
}
matrixboot[upper.tri(matrixboot)] <- t(matrixboot)[upper.tri(matrixboot)]
results[[i]] <- computeIMEC(matrixboot, evidence, phenomena, theory1, theory2, analytic)
}
results
