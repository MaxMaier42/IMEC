sigma[i] = alpha_sigma / exp(beta_sigma);
}
}
target += normal_lpdf(y | mu, sigma);
}
"
group1 <- rnorm(100, 0, 1)
group2 <- rnorm(100, 1, 2)
data_stan <- list(
"y" = c(group1, group2),
"x" = c(rep(1, length(group1)), rep(2, length(group2))),
"N" = length(c(group1, group2))
)
rstan_model   <- stan_model(model_code = model_code)
library(rstan)
model_code <- "
data {
int<lower=0> N;
vector[N] x;
vector[N] y;
}
parameters {
real alpha_mu;
real<lower=0> alpha_sigma;
real beta_mu;
real beta_sigma;
}
model {
vector[N] mu;
vector[N] sigma;
// priors
target += normal_lpdf(alpha_mu    | 0, 1);
target += normal_lpdf(beta_mu     | 0, 1);
target += normal_lpdf(alpha_sigma | 0, 1) - normal_lccdf(0 | 0, 1);
target += normal_lpdf(beta_sigma  | 0, 0.5);
// model
for(i in 1:N){
if(x[i] == 1){
mu[i]    = alpha_mu + beta_mu/2;
sigma[i] = alpha_sigma * exp(beta_sigma);
} else if(x[i] == 2){
mu[i]    = alpha_mu - beta_mu/2;
sigma[i] = alpha_sigma / exp(beta_sigma);
}
}
target += normal_lpdf(y | mu, sigma);
}
"
group1 <- rnorm(100, 0, 1)
group2 <- rnorm(100, 1, 2)
data_stan <- list(
"y" = c(group1, group2),
"x" = c(rep(1, length(group1)), rep(2, length(group2))),
"N" = length(c(group1, group2))
)
rstan_model   <- stan_model(model_code = model_code)
model_code <- "
data {
int<lower=0> N;
vector[N] x;
vector[N] y;
}
parameters {
real alpha_mu;
real<lower=0> alpha_sigma;
real beta_mu;
real beta_sigma;
}
model {
vector[N] mu;
vector[N] sigma;
// priors
target += normal_lpdf(alpha_mu    | 0, 1);
target += normal_lpdf(beta_mu     | 0, 1);
target += normal_lpdf(alpha_sigma | 0, 1) - normal_lccdf(0 | 0, 1);
target += normal_lpdf(beta_sigma  | 0, 0.5);
// model
for(i in 1:N){
if(x[i] == 1){
mu[i]    = alpha_mu + beta_mu/2;
sigma[i] = alpha_sigma * exp(beta_sigma);
} else if(x[i] == 2){
mu[i]    = alpha_mu - beta_mu/2;
sigma[i] = alpha_sigma / exp(beta_sigma);
}
}
target += normal_lpdf(y | mu, sigma);
}
"
24/642
1009/1230-207/340
1009/1230-207/340+sqrt(1009/1230*(1-1009/1230)/1230 + 207/340*(1-207/340)/340)*qnorm(0.975)
1009/1230-207/340-sqrt(1009/1230*(1-1009/1230)/1230 + 207/340*(1-207/340)/340)*qnorm(0.975)
(4.84/0.4)^2
1.96^2/4*(0.05^2)
1.96^2/(4*(0.05^2))
1.96^2/(4*(0.03)^2)
pnorm(0.9)
pnorm(0.9)^2
3.5/2.5
0.2/5
1.96*0.04
0.1/0.04
22*32.53/100
28.87*30/18
18*48.117/80
mean(2.1, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2)
sd(2.1, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2)
sd(c(2.1, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2))
mean(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3)
sd(c(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3))
s1 <- sd(c(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3))
s2 <- sd(c(2.1, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2))
sqrt((9*s1^2+9*s2^2)/18)
sp <- sqrt((9*s1^2+9*s2^2)/18)
m1 <- mean(2.1, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2)
m2 <- mean(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3)
(m2-m1)/(sp*sqrt(1/9+1/9)
(m2-m1)/(sp*sqrt(1/9+1/9))
sp
sp <- sqrt((9*s1^4+9*s2^4)/18)
sp
s2 <- sd(c(2.1, 2.6, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2))
sp <- sqrt((9*s1^4+9*s2^4)/18)
sp
(m2-m1)/(sp*sqrt(1/9+1/9))
m2 <- mean(2.1, 2.6, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2)
m2
(m2-m1)/(sp*sqrt(1/9+1/9))
12.9^2/7.1^2
pbinom(6,100, 0.08)
qbinom(6,100, 0.08)
pbinom(6,100, 0.08)
pbinom(6,100, 0.04)
pbinom(5,100, 0.04)
5/6
mean(21.24, 24.81, 23.62, 26.82)
(25-21.24)/3
(355-354.05)/2/sqrt(12)
(355-354.05)/(2/sqrt(12))
10/6
mean(21.24, 24.81, 23.62, 26.82)
mean(c(21.24, 24.81, 23.62, 26.82))
(25-24.1225)/1.5
pnorm(0.585)
2^3*exp(-2)/factorial(2)
3^5*exp(-3)/factorial(3)
3^5*exp(-3)/factorial(5)
2^3*exp(-2)/factorial(3)
sqrt(1/12/sqrt(12))
(1-0.1587)-0.5
1.5/(6/10/sqrt(15))
-0.3/(6/10/sqrt(15))
sqrt(1/12/15)
16/1^44
16/144
16/14^2
333-18^2
9/25^2
0.25*0.75/100/0.05^2
0.25*0.75/500/0.05^2
0.25*0.75/1000/0.05^2
73.8+25/4
73.8+5/4*1.96
12*128.41/6.11
12*128.41/24.57
12*128.41/21.03
12*128.41/5.266
sqrt(6.11)
937.4-988.9+1.96*sqrt(784/56+627/57)
937.4-988.9-1.96*sqrt(784/56+627/57)
937.4-988.9-1.64*sqrt(784/56+627/57)
24/642
24/642 + 1.96*sqrt(24/642*(1-24/642)/642)
24/642 - 1.96*sqrt(24/642*(1-24/642)/642)
)24/642+1.96^2/(2*642)+sqrt(24/642*(1-24/642)/642+1.96^2/4*642^2))/(1+1.96^2/642)
24/642+1.96^2/(2*642)+sqrt(24/642*(1-24/642)/642+1.96^2/4*642^2))/(1+1.96^2/642)
24/642+1.96^2/(2*642)+sqrt(24/642*(1-24/642)/642+1.96^2/(4*642^2))/(1+1.96^2/642)
(24/642+1.96^2/(2*642)+sqrt(24/642*(1-24/642)/642+1.96^2/(4*642^2)))/(1+1.96^2/642)
(24/642+1.96^2/(2*642)-sqrt(24/642*(1-24/642)/642+1.96^2/(4*642^2)))/(1+1.96^2/642)
(24/642+1.96^2/(2*642)-1.96*sqrt(24/642*(1-24/642)/642+1.96^2/(4*642^2)))/(1+1.96^2/642)
(24/642+1.96^2/(2*642)+1.96*sqrt(24/642*(1-24/642)/642+1.96^2/(4*642^2)))/(1+1.96^2/642)
1009/1230-207/340
0.2115+1.96*sqrt((1009/1230*(1-1009/1230))/1230+(207/340*(1-207/340))/340)
0.2115-1.96*sqrt((1009/1230*(1-1009/1230))/1230+(207/340*(1-207/340))/340)
(4.84/0.4)^2
1.96/(4*0.03^2)
pnorm(0.9)
(0.816/0.05*sqrt(0.5))^2
(sqrt(4.84)/0.4)^2
(sqrt(4.84)/0.4)^2
(sqrt(4.84*1.96)/0.4)^2
(4.84*1.96)/0.4)^2
(4.84*1.96/0.4)^2
(4.84*1.96^2/0.4^2)
1.96^2/(4*0.03^2)
pnorm(0.9)
(0.816/0.05*sqrt(0.5))^2
(pnorm(0.95)/0.05*sqrt(0.5))^2
(pnorm(0.975)/0.05*sqrt(0.5))^2
pnorm(0.95)
(qnorm(0.9)/0.05*sqrt(0.5))^2
3.5/2.5
mean(2.1, 2.6, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2)
mean(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3)
sd(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3)
var(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3)
sd(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3)
mean(c(2.1, 2.6, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2))
mean(c(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3))
sd(c(2.1, 2.6, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2))
var(c(2.1, 2.6, 2.6, 3.4, 2.1, 1.7, 2.6, 2.6, 2.2, 1.2))
var(c(3.5, 3.9, 3.0, 2.3, 2.1, 3.1, 3.6, 1.8, 2.9, 3.3))
mean(c(0.1, 0.15, 0.2, 0.2, 0.55, 0.6, 0.6, 0.65, 0.7, 0.75))
mean(0.1, 0.15, 0.2, 0.2, 0.55, 0.6, 0.6, 0.65, 0.7, 0.75)
2-sqrt(3)
runjags::autorun.jags(
model           = model_syntax,
data            = data,
monitor         = "omega",
n.chains        = 2,
method          = "rjparallel",
modules         = "RoBMA"
)
library("RoBMA")
model_syntax <- '
model{
for(j in 1:2){
eta[j] ~ dgamma(1, 1)
}
for(j in 1:2){
std_eta[j]  = eta[j] / sum(eta)
omega[j]    = sum(std_eta[1:j])
}
for(i in 1:10){
t[i] ~ dwt_1s(10, 0, crit_t[i,], omega)
}
}'
data <- list(
t      = rt(10, 10),
crit_t = matrix(1.96, ncol = 1, nrow = 10)
)
runjags::autorun.jags(
model           = model_syntax,
data            = data,
monitor         = "omega",
n.chains        = 2,
method          = "rjparallel",
modules         = "RoBMA"
)
library("IMEC")
?IMEC
?computeIMEC
library("IMEC")
#Comparison of Oxygen and Phlogiston Theory of Combustion
Phenomena <- c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8")
Oxygen <- c("OH1", "OH2", "OH3", "OH4", "OH5", "OH6")
Phlogiston <- c("PH1", "PH2", "PH3", "PH4", "PH5", "PH6")
evidence <- c(rep(1,8))
## oxygen and phlogiston
explanations <- initializeNetwork(Phenomena, Oxygen, Phlogiston)
#oygen explanations
explanations <- Explain(c("OH1", "OH2", "OH3"), "E1", explanations)
explanations <- Explain(c("OH1", "OH3"), "E3", explanations)
explanations <- Explain(c("OH1", "OH3", "OH4"), "E4", explanations)
explanations <- Explain(c("OH1", "OH5"), "E5", explanations)
explanations <- Explain(c("OH1", "OH4", "OH5"), "E6", explanations)
explanations <- Explain(c("OH1", "OH5"), "E7", explanations)
explanations <- Explain(c("OH1", "OH6"), "E8", explanations)
#phlogiston explanations
explanations <- Explain(c("PH1", "PH2", "PH3"), "E1", explanations)
explanations <- Explain(c("PH1", "PH3", "PH4"), "E2", explanations)
explanations <- Explain(c("PH5", "PH6"), "E5", explanations)
#Contradictions
explanations <- Contradict("PH3", "OH3", explanations)
explanations <- Contradict("PH6", "OH5", explanations)
IMEC <- computeIMEC(explanations,evidence, Phenomena, Oxygen, Phlogiston)
plot(IMEC)
library("IMEC")
#Comparison of Oxygen and Phlogiston Theory of Combustion
Phenomena <- c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8")
Oxygen <- c("OH1", "OH2", "OH3", "OH4", "OH5", "OH6")
Phlogiston <- c("PH1", "PH2", "PH3", "PH4", "PH5", "PH6")
evidence <- c(rep(1,8))
## oxygen and phlogiston
explanations <- initializeNetwork(Phenomena, Oxygen, Phlogiston)
#oygen explanations
explanations <- Explain(c("OH1", "OH2", "OH3"), "E1", explanations)
explanations <- Explain(c("OH1", "OH3"), "E3", explanations)
explanations <- Explain(c("OH1", "OH3", "OH4"), "E4", explanations)
explanations <- Explain(c("OH1", "OH5"), "E5", explanations)
explanations <- Explain(c("OH1", "OH4", "OH5"), "E6", explanations)
explanations <- Explain(c("OH1", "OH5"), "E7", explanations)
explanations <- Explain(c("OH1", "OH6"), "E8", explanations)
#phlogiston explanations
explanations <- Explain(c("PH1", "PH2", "PH3"), "E1", explanations)
explanations <- Explain(c("PH1", "PH3", "PH4"), "E2", explanations)
explanations <- Explain(c("PH5", "PH6"), "E5", explanations)
#Contradictions
explanations <- Contradict("PH3", "OH3", explanations)
explanations <- Contradict("PH6", "OH5", explanations)
IMEC <- computeIMEC(explanations,evidence, Phenomena, Oxygen, Phlogiston)
plot(IMEC)
plot(IMEC, nodesize = 8)
library("IMEC")
#Comparison of Oxygen and Phlogiston Theory of Combustion
Phenomena <- c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8")
Oxygen <- c("OH1", "OH2", "OH3", "OH4", "OH5", "OH6")
Phlogiston <- c("PH1", "PH2", "PH3", "PH4", "PH5", "PH6")
evidence <- c(rep(1,8))
## oxygen and phlogiston
explanations <- initializeNetwork(Phenomena, Oxygen, Phlogiston)
#oygen explanations
explanations <- Explain(c("OH1", "OH2", "OH3"), "E1", explanations)
explanations <- Explain(c("OH1", "OH3"), "E3", explanations)
explanations <- Explain(c("OH1", "OH3", "OH4"), "E4", explanations)
explanations <- Explain(c("OH1", "OH5"), "E5", explanations)
explanations <- Explain(c("OH1", "OH4", "OH5"), "E6", explanations)
explanations <- Explain(c("OH1", "OH5"), "E7", explanations)
explanations <- Explain(c("OH1", "OH6"), "E8", explanations)
#phlogiston explanations
explanations <- Explain(c("PH1", "PH2", "PH3"), "E1", explanations)
explanations <- Explain(c("PH1", "PH3", "PH4"), "E2", explanations)
explanations <- Explain(c("PH5", "PH6"), "E5", explanations)
#Contradictions
explanations <- Contradict("PH3", "OH3", explanations)
explanations <- Contradict("PH6", "OH5", explanations)
IMEC <- computeIMEC(explanations,evidence, Phenomena, Oxygen, Phlogiston)
plot(IMEC, nodesize = 8)
library("IMEC")
#Comparison of Oxygen and Phlogiston Theory of Combustion
Phenomena <- c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8")
Oxygen <- c("OH1", "OH2", "OH3", "OH4", "OH5", "OH6")
Phlogiston <- c("PH1", "PH2", "PH3", "PH4", "PH5", "PH6")
evidence <- c(rep(1,8))
## oxygen and phlogiston
explanations <- initializeNetwork(Phenomena, Oxygen, Phlogiston)
#oygen explanations
explanations <- Explain(c("OH1", "OH2", "OH3"), "E1", explanations)
explanations <- Explain(c("OH1", "OH3"), "E3", explanations)
explanations <- Explain(c("OH1", "OH3", "OH4"), "E4", explanations)
explanations <- Explain(c("OH1", "OH5"), "E5", explanations)
explanations <- Explain(c("OH1", "OH4", "OH5"), "E6", explanations)
explanations <- Explain(c("OH1", "OH5"), "E7", explanations)
explanations <- Explain(c("OH1", "OH6"), "E8", explanations)
#phlogiston explanations
explanations <- Explain(c("PH1", "PH2", "PH3"), "E1", explanations)
explanations <- Explain(c("PH1", "PH3", "PH4"), "E2", explanations)
explanations <- Explain(c("PH5", "PH6"), "E5", explanations)
#Contradictions
explanations <- Contradict("PH3", "OH3", explanations)
explanations <- Contradict("PH6", "OH5", explanations)
IMEC <- computeIMEC(explanations,evidence, Phenomena, Oxygen, Phlogiston)
plot(IMEC, nodesize = 8)
library("IMEC")
#Comparison of Oxygen and Phlogiston Theory of Combustion
Phenomena <- c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8")
Oxygen <- c("OH1", "OH2", "OH3", "OH4", "OH5", "OH6")
Phlogiston <- c("PH1", "PH2", "PH3", "PH4", "PH5", "PH6")
evidence <- c(rep(1,8))
## oxygen and phlogiston
explanations <- initializeNetwork(Phenomena, Oxygen, Phlogiston)
#oygen explanations
explanations <- Explain(c("OH1", "OH2", "OH3"), "E1", explanations)
explanations <- Explain(c("OH1", "OH3"), "E3", explanations)
explanations <- Explain(c("OH1", "OH3", "OH4"), "E4", explanations)
explanations <- Explain(c("OH1", "OH5"), "E5", explanations)
explanations <- Explain(c("OH1", "OH4", "OH5"), "E6", explanations)
explanations <- Explain(c("OH1", "OH5"), "E7", explanations)
explanations <- Explain(c("OH1", "OH6"), "E8", explanations)
#phlogiston explanations
explanations <- Explain(c("PH1", "PH2", "PH3"), "E1", explanations)
explanations <- Explain(c("PH1", "PH3", "PH4"), "E2", explanations)
explanations <- Explain(c("PH5", "PH6"), "E5", explanations)
#Contradictions
explanations <- Contradict("PH3", "OH3", explanations)
explanations <- Contradict("PH6", "OH5", explanations)
IMEC <- computeIMEC(explanations,evidence, Phenomena, Oxygen, Phlogiston)
plot(IMEC, nodesize = 8)
summary(IMEC)
library("IMEC")
#Comparison of Oxygen and Phlogiston Theory of Combustion
Phenomena <- c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8")
Oxygen <- c("OH1", "OH2", "OH3", "OH4", "OH5", "OH6")
Phlogiston <- c("PH1", "PH2", "PH3", "PH4", "PH5", "PH6")
library(IMEC)
## explanatory breadth ##
T1 <- c("H1")
t2 <- c("H2")
Phenomena <- c("E1", "E2")
Thresholds <- c(2,2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- Explain("H1", "E1", explanations)
explanations <- Explain("H1", "E2", explanations)
explanations <- initializeNetwork(Phenomena, T1, T2)
library(IMEC)
## explanatory breadth ##
T1 <- c("H1")
T2 <- c("H2")
Phenomena <- c("E1", "E2")
Thresholds <- c(2,2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- Explain("H1", "E1", explanations)
explanations <- Explain("H1", "E2", explanations)
explanations <- Explain("H2", "E2", explanations)
explanations <- Contradict("H1", "H2", explanations)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
summary(Coherence)
breadth <- plot(Coherence)
## Refutation ##
#one theory
T1 <- c("H1")
Phenomena <- c("E1", "E2", "E3")
Thresholds <- c(2,2,2)
explanations <- initializeNetwork(Phenomena, T1)
explanations <- Explain(c("H1"),"E1",explanations,weight = 1.0001)
explanations <- Explain(c("H1"),"E2",explanations)
explanations <- Explain(c("H1"),"E3", explanations, weight = -1)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1)
summary(Coherence)
Refutation1 <- plot(Coherence, nodesize = 16)
#two theories
T1 <- c("H1")
T2 <- c("H2")
Phenomena <- c("E1", "E2", "E3")
Thresholds <- c(2,2,-2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- Explain(c("H1"),"E1",explanations)
explanations <- Explain(c("H1"),"E2",explanations)
explanations <- Explain(c("H2"),"E1",explanations)
explanations <- Explain(c("H2"),"E2",explanations)
explanations <- Explain(c("H1"),"E3", explanations, weight = -1)
explanations <- Contradict("H1", "H2", explanations)
Coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
summary(Coherence)
Refutation2 <- plot(Coherence, nodesize = 16)
m <- matrix(c(1,2), byrow = T, nrow =  1)
layout(m)
layout.show(length(m))
layout(m)
par(oma=c(2, 2, 2, 2), mar=c(0, 0, 0, 0))
plot(Refutation1, nodesize = 20)
text(x = 0.9,adj = c(1,0),labels = "A", cex = 2)
box()
plot(Refutation2, nodesize = 20)
text(x = 0.9,adj = c(1,0),labels = "B", cex = 2)
box()
T1 <- c("H1")
T2 <- c("H2")
Phenomena <- c("E1", "E2", "E3", "E4")
Thresholds <- c(2,2,2,2)
explanations <- initializeNetwork(Phenomena, T1)
explanations <- Explain("H1", "E1", explanations)
explanations <- Explain("H2", "E2", explanations)
explanations <- Explain("H2", "E3", explanations)
explanations <- Explain("H2", "E4", explanations)
explanations <- Contradict("H1", "H2", explanations)
coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1)
plot(coherence, nodesize = 8)
T2 <- c("H2")
Phenomena <- c("E1", "E2", "E3", "E4")
Thresholds <- c(2,2,2,2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- Explain("H1", "E1", explanations)
explanations <- Explain("H2", "E2", explanations)
explanations <- Explain("H2", "E3", explanations)
explanations <- Explain("H2", "E4", explanations)
explanations <- Contradict("H1", "H2", explanations)
coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
plot(coherence, nodesize = 8)
T1 <- c("H1")
T2 <- c("H2")
Phenomena <- c("E1", "E2", "E3", "E4")
Thresholds <- c(2,2,2,2)
explanations <- initializeNetwork(Phenomena, T1, T2)
explanations <- Explain("H1", "E1", explanations)
explanations <- Explain("H2", "E2", explanations)
explanations <- Explain("H2", "E3", explanations)
explanations <- Explain("H2", "E4", explanations)
explanations <- Contradict("H1", "H2", explanations)
coherence <- computeIMEC(explanations, Thresholds, Phenomena, T1, T2)
plot(coherence, nodesize = 8)
##We recommend to read the tutorial at https://osf.io/6dgyv/ before running this code.
library(IMEC)
#positive manifold by mutualism
Phenomena <- c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8")
Mutualism <- c("HM1", "HM2", "HM3", "HM4")
Latent <- c("HL1", "HL2")
evidence <- c(rep(2,7), -2)
explanations <- initializeNetwork(Phenomena, Mutualism, Latent)
##Mutualism explanations
explanations <- Explain("HM1", "E1", explanations)
explanations <- Explain(c("HM1", "HM2"), "E2", explanations)
explanations <- Explain("HM1", "E3", explanations)
explanations <- Explain("HM1", "E4", explanations)
explanations <- Explain(c("HM1", "HM3"), "E5", explanations)
explanations <- Explain(c("HM1", "HM4"), "E6", explanations)
explanations <- Explain("HM1", "E7", explanations)
#Latent Variable Explanations
explanations <- Explain("HL1", "E1", explanations)
explanations <- Explain("HL1", "E3", explanations)
explanations <- Explain("HL1", "E4", explanations)
explanations <- Explain("HL1", "E5", explanations)
explanations <- Explain(c("HL1", "HL2"), "E6", explanations)
explanations <- Explain(c("HL1"), "E8", explanations, weight = -1)
explanations <- Contradict("HL1", "HM1", explanations)
coherence <- computeIMEC(explanations, evidence, Phenomena, Mutualism, Latent)
plot(coherence, nodesize = 6)
setwd("C:/Users/Maximilian Maier/Desktop/Uni/Internship/PaperCode")
setwd("C:/Users/Maximilian Maier/Desktop/IMECPackage/IMEC/R")
devtools::build()
devtools::check()
